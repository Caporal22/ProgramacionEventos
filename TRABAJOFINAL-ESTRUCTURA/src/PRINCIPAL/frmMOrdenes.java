/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JInternalFrame.java to edit this template
 */
package PRINCIPAL;
import Clases.ListaEnlazada;
import Clases1.*;
import Clases.Usuario;
import java.text.DecimalFormat;
import javax.swing.JOptionPane;

import javax.swing.table.DefaultTableModel;




/**
 *
 * @author karol
 */
public class frmMOrdenes extends javax.swing.JInternalFrame {
private DefaultTableModel modeloTabla;
private int folioCounter = 1;
public static String nombreMesero; 

private static Cola<Double> colaTotales;
   
    /**
     * Creates new form frmMOrdenes
     */
    public frmMOrdenes(Cola<Double> colaTotales) {
        initComponents();
        this.colaTotales = colaTotales;
        
        setupAndLoadTable();
       
        
    }
    
    
    
   
private void setupAndLoadTable() {
    
    modeloTabla = new DefaultTableModel();
    modeloTabla.addColumn("Nombre del Mesero");
    modeloTabla.addColumn("Total de la Cuenta");
    modeloTabla.addColumn("Activa");
    modeloTabla.addColumn("Folio");

    jtOrdenes.setModel(modeloTabla);

    
    Cola<Double> tempCola = new Cola<>();
    int folioCounter = 1;
    boolean activa = true;

    while (!colaTotales.estaVacia()) {
        Double totalCuenta = colaTotales.desencolar();
        modeloTabla.addRow(new Object[]{
            frmInicio.nombreMesero,
            formatCurrency(totalCuenta),
            activa,
            folioCounter
        });
        folioCounter++;
        tempCola.encolar(totalCuenta);
    }

    
    while (!tempCola.estaVacia()) {
        colaTotales.encolar(tempCola.desencolar());
    }
}

private String formatCurrency(Double amount) { 
    DecimalFormat df = new DecimalFormat("00.00");
 
    return df.format(amount); 
}
    

    
   
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jtOrdenes = new javax.swing.JTable();
        jlBuscar = new javax.swing.JTextField();
        jcnCancelarOrden = new javax.swing.JButton();

        setClosable(true);
        setIconifiable(true);
        setMaximizable(true);
        setResizable(true);

        jtOrdenes.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {},
                {},
                {},
                {}
            },
            new String [] {

            }
        ));
        jScrollPane1.setViewportView(jtOrdenes);

        jlBuscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jlBuscarActionPerformed(evt);
            }
        });

        jcnCancelarOrden.setFont(new java.awt.Font("Dialog", 1, 24)); // NOI18N
        jcnCancelarOrden.setText("Cancelar una orden");
        jcnCancelarOrden.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jcnCancelarOrdenActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(105, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 752, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(95, 95, 95))
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(499, 499, 499)
                        .addComponent(jlBuscar, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(262, 262, 262)
                        .addComponent(jcnCancelarOrden, javax.swing.GroupLayout.PREFERRED_SIZE, 295, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jlBuscar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(30, 30, 30)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 346, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jcnCancelarOrden, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(27, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jlBuscarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jlBuscarActionPerformed
       String folioStr = jlBuscar.getText(); // Suponiendo que jtFolioBuscar es tu JTextField
    if (!folioStr.isEmpty()) {
        try {
            int folio = Integer.parseInt(folioStr);
            boolean found = false;

            // Limpiar la tabla antes de buscar
            modeloTabla.setRowCount(0);
            setupAndLoadTable(); // Cargar nuevamente los datos

            // Crear una lista temporal para almacenar las filas encontradas
            DefaultTableModel tempModel = new DefaultTableModel();
            tempModel.addColumn("Nombre del Mesero");
            tempModel.addColumn("Total de la Cuenta");
            tempModel.addColumn("Activa");
            tempModel.addColumn("Folio");

            for (int i = 0; i < modeloTabla.getRowCount(); i++) {
                if (modeloTabla.getValueAt(i, 3).equals(folio)) { 
                    tempModel.addRow(new Object[]{
                        modeloTabla.getValueAt(i, 0),
                        modeloTabla.getValueAt(i, 1),
                        modeloTabla.getValueAt(i, 2),
                        modeloTabla.getValueAt(i, 3)
                    });
                    found = true;
                }
            }

            // Si se encontró al menos un folio, actualizar la tabla
            if (found) {
                modeloTabla.setRowCount(0); // Limpiar la tabla original
                for (int i = 0; i < tempModel.getRowCount(); i++) {
                    modeloTabla.addRow(new Object[]{
                        tempModel.getValueAt(i, 0),
                        tempModel.getValueAt(i, 1),
                        tempModel.getValueAt(i, 2),
                        tempModel.getValueAt(i, 3)
                    });
                }
            } else {
                JOptionPane.showMessageDialog(this, "EL número de foli no fue encontrado.");
            }
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(this, "Por favor, ingrese un número válido.");
        }
    } else {
        JOptionPane.showMessageDialog(this, "Por favor, ingrese un folio.");
    }
    }//GEN-LAST:event_jlBuscarActionPerformed

    private void jcnCancelarOrdenActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jcnCancelarOrdenActionPerformed
    try {
        int selectedRow = jtOrdenes.getSelectedRow(); // Obtener la fila seleccionada

        if (selectedRow == -1) {
            JOptionPane.showMessageDialog(this, "Selecciona una orden para cancelar.");
            return;
        }

        Object totalObj = jtOrdenes.getValueAt(selectedRow, 1);
        Object folioObj = jtOrdenes.getValueAt(selectedRow, 3);

        if (totalObj == null || folioObj == null) {
            JOptionPane.showMessageDialog(this, "Error: Los datos seleccionados contienen valores nulos. Verifique la tabla.");
            return;
        }

        String totalCuenta = totalObj.toString();
        int folio = Integer.parseInt(folioObj.toString());

        String motivo = JOptionPane.showInputDialog(this, "Ingrese el motivo de la cancelación:");
        if (motivo == null || motivo.trim().isEmpty()) {
            JOptionPane.showMessageDialog(this, "Debe ingresar un motivo para continuar.");
            return;
        }

        Ordenes cancelacion = new Ordenes(totalCuenta, null, false, folio);
        cancelacion.setMotivo(motivo); // Establecer el motivo de la cancelación (si el método existe)

        DatosCompartidos.cancelaciones.encolar(cancelacion);
        System.out.println("Cancelación encolada exitosamente:  " + cancelacion);

        ((DefaultTableModel) jtOrdenes.getModel()).removeRow(selectedRow);

        JOptionPane.showMessageDialog(this, "Orden cancelada correctamente.");
    } catch (UnsupportedOperationException e) {
        JOptionPane.showMessageDialog(this, "Ocurrió un error inesperado: " + e.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
        e.printStackTrace();
    } catch (NumberFormatException e) {
        JOptionPane.showMessageDialog(this, "Error en el formato de los datos seleccionados. Verifique los valores.", "Error", JOptionPane.ERROR_MESSAGE);
        e.printStackTrace();
    } catch (Exception e) {
        JOptionPane.showMessageDialog(this, "Ocurrió un error inesperado: " + e.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
        e.printStackTrace();
    }


    }//GEN-LAST:event_jcnCancelarOrdenActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton jcnCancelarOrden;
    private javax.swing.JTextField jlBuscar;
    private javax.swing.JTable jtOrdenes;
    // End of variables declaration//GEN-END:variables
}
